<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
    <!-- 指定Web应用的定义名称 -->
    <display-name>mywebsite</display-name>
    
    <!-- Spring字符编码过滤器配置，处理中文乱码 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 利用CSRF特定防御防止跨站点请求伪造 -->
    <filter>
        <filter-name>CSRFValidationFilter</filter-name>
        <filter-class>site.zengguang.util.security.CSRFValidationFilter</filter-class>
         <init-param>
            <param-name>exclusions</param-name>
            <param-value>/home/index-color.html,/jsp/dialog/dialog.html</param-value>
        </init-param>
    </filter>
    <!-- XSS注入过滤器 -->
    <filter>
        <filter-name>XSSFilter</filter-name>
        <filter-class>site.zengguang.util.security.XSSFilter</filter-class>
    </filter>
    
    <!-- CSRF安全校验，防御跨站点请求伪造 -->
    <filter-mapping>
        <filter-name>CSRFValidationFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- XSS注入过滤器 -->
    <filter-mapping>
        <filter-name>XSSFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 设置session过期时间 -->
    <session-config>
        <session-timeout>15</session-timeout> 
    </session-config>
    
    <!-- log4j日志配置 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:config/log4j.properties</param-value>
    </context-param>
    <listener>
        <description>log4j配置加载器</description>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <!-- 默认登录页配置 -->
    <welcome-file-list>
        <welcome-file>home/index-color.html</welcome-file>
    </welcome-file-list>
    <!-- 配置需要装载的Spring配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/application.xml
            classpath*:/springmvc/spring-mvc.xml
        </param-value>
    </context-param>
    <!-- Spring监听配置，Web容器启动自动装配ApplicationContext的配置信息 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- Spring Servlet配置 -->
    <servlet>
        <servlet-name>springServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:/springmvc/spring-mvc.xml,classpath*:/application.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- 默认拦截路径 -->
    <servlet-mapping>
        <servlet-name>springServlet</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>
</web-app>